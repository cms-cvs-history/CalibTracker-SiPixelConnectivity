process SiPixelFedCablingMapWriter = {

  # empty input service, fire 2 events
  source = EmptySource {untracked int32 maxEvents = 2}

  # message logger
  service = MessageLogger {
    untracked vstring destinations = { "event.log", "error.log", "debug.log" }
   untracked PSet error.log = { 
         untracked string threshold = "WARNING" 
         untracked PSet default = { untracked int32 limit = -1 bool noLineBreaks = false } }
    untracked PSet event.log = { 
         untracked string threshold = "INFO"    
         untracked PSet default = { untracked int32 limit = -1 bool noLineBreaks = false } }
    untracked PSet debug.log = { 
         untracked string threshold = "DEBUG"   
         untracked PSet default = { untracked int32 limit = -1 bool noLineBreaks = false } }
    untracked vstring debugModules = { "*" }  // comment to inhibit ("time-consuming") debug verbosity
  }
#service = MessageLogger { vstring destinations = {"cout"} PSet cout = { PSet default = { int32 limit = 0 } } } 


  # Tracker SimGeometryXML
  include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"

  # Tracker Geometry Builder
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # Tracker Numbering Builder
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # converter to assign DetUnit to FED number
  es_module = PixelToLNKAssociateFromAsciiESProducer {
    string fileName = "pixelToLNK.ascii"                 // input txt file
  }

  module MapWriter = SiPixelFedCablingMapWriter {
    string dbconnect="sqlite_file:cabling.db" 
    string tag="SiPixelFedCablingMap_v1" 
    untracked string catalog="file:cablingCatalog.xml" 
    untracked string associator = "PixelToLNKAssociateFromAscii"  // converter to assign DetUnit to FED number
  }

  # provide a scheduler path
  path p = { MapWriter }      
}

